variables:
  MUMBLE_ENVIRONMENT_STORE: '$(Agent.ToolsDirectory)/MumbleBuild'
  MUMBLE_ENVIRONMENT_SOURCE: 'https://dl.mumble.info/build/vcpkg'
  MUMBLE_ENVIRONMENT_PATH: '$(MUMBLE_ENVIRONMENT_STORE)/$(MUMBLE_ENVIRONMENT_VERSION)'
  MUMBLE_ENVIRONMENT_TOOLCHAIN: '$(MUMBLE_ENVIRONMENT_PATH)/scripts/buildsystems/vcpkg.cmake'

jobs:
  - job: Windows
    pool:
      vmImage: 'windows-latest'
    variables:
      MUMBLE_ENVIRONMENT_VERSION: 'win64-static-1.4.x-2020-05-27-ecb3c64-1151'
    steps:
    - script: git submodule --quiet update --init --recursive
      displayName: 'Fetch submodules'
    - task: Cache@2
      inputs:
        key: '"$(MUMBLE_ENVIRONMENT_VERSION)"'
        path: '$(MUMBLE_ENVIRONMENT_PATH)'
      displayName: 'Environment storage'
    - powershell: scripts/azure-pipelines/install-environment_windows.ps1
      displayName: 'Install build environment'
    - script: scripts/azure-pipelines/build_windows.bat
      displayName: 'Build'
    - powershell: |
        cd $(Agent.BuildDirectory)
        .\Create-Win32InstallerMUI.ps1 -PackageName 'Mumble' -Version '1.4.0' -SystemName 'win64'
        cp install/*.msi $(Build.ArtifactStagingDirectory)
      displayName: Build installer
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: WindowsInstaller
  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - script: git submodule --quiet update --init --recursive
      displayName: 'Fetch submodules'
    - script: scripts/azure-pipelines/install-environment_linux.bash
      displayName: 'Install build environment'
    - script: scripts/azure-pipelines/build_linux.bash
      displayName: 'Build'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: AppImage
  - job: macOS
    pool:
      vmImage: 'macOS-latest'
    variables:
      MUMBLE_ENVIRONMENT_VERSION: 'macos-static-1.4.x-2020-05-27-ecb3c64-1151'
    steps:
    - script: git submodule --quiet update --init --recursive
      displayName: 'Fetch submodules'
    - task: Cache@2
      inputs:
        key: '"$(MUMBLE_ENVIRONMENT_VERSION)"'
        path: '$(MUMBLE_ENVIRONMENT_PATH)'
      displayName: 'Environment storage'
    - script: scripts/azure-pipelines/install-environment_macos.bash
      displayName: 'Install build environment'
    - script: scripts/azure-pipelines/build_macos.bash
      displayName: 'Build'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: macOS installer
  - job: Translations
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: scripts/azure-pipelines/install-environment_linux_translations.bash
      displayName: 'Install Qt tools'
    - script: scripts/azure-pipelines/assertNoTranslationChanges.sh
      displayName: 'Checking for translation changes'
